


reset;
model trabalho02A.mod;
data trabalho02.dat;

option solver gurobi;

solve;

printf "\n";
printf "*** minimizing total cost ***\n";
printf "DC cost: %g euros\n",  DTotalCost;
printf "Total cost: %.8g euros\n", tcost;
printf "Quantity of dc open:%g\n" ,sum{i in N} dc_open[i]; 
for {i in N} {
	if dc_open[i] == 1 then {
	printf "DC Location:%s 	(%g,%g) \n", i ,lat[i], lng[i];
}
}
 
 printf "\n\n";
 for {i in N} {
 
 	if dc_open[i] == 1 then {
 	printf "\n******   DC %s serves    ********\n", i;
	}
	
	for {j in N} {
	
		if dc_serving_city[i,j] == 1 then {
		printf "%s, " , j; 			
		#printf "distance: %g km\n" ,d[j,i];
		printf "cost: %g euros\n\n" ,c[j]*d[i,j]*dc_serving_city[i,j];
		}
	}
	
	if dc_open[i] == 1 then {
 	printf "\n************************************\n";
	}
	
}
/*
param max1 := 0;
param max_name := 2;

*/

printf "\nmax cost: %g \n\n", max{i in N, j in N} (d[i,j]*dc_serving_city[i,j]*c[j]*dc_open[i]);

/*
let BIG := max{i in N, j in N} (d[i,j]*dc_serving_city[i,j]*c[j]*dc_open[i])
printf "max maior: %g" ,BIG;
*/
param _maxvalue default -100;
param citymax symbolic in N;
param dcmax symbolic in N;

for {i in N} {
	for {j in N} {
		if (_maxvalue < (d[i,j]*dc_serving_city[i,j]*c[j]*dc_open[i])) then {		
			let _maxvalue :=  (d[i,j]*dc_serving_city[i,j]*c[j]*dc_open[i]);
			let citymax:= j;
			let dcmax := i;
		}
	}
}

display _maxvalue, citymax, dcmax;


/*
let max1 := 0;
for {j in N} {
	for {i in N} {
		if dc_serving_city[i,j] == 1 then {
			if max1 < (d[i,j] * dc_serving_city[i,j] * c[j]) then {
				let max1 := (d[i,j] * dc_serving_city[i,j] * c[j]);
				let max_name := j;
				}
		}
display max, max_name;
	}
}
*/
